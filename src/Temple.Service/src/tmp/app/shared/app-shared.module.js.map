{"version":3,"sources":["app/shared/app-shared.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,qBAAkE,eAAe,CAAC,CAAA;AAClF,qBAAiD,eAAe,CAAC,CAAA;AACjE,iCAA8B,2BAA2B,CAAC,CAAA;AAC1D,uBAA6B,iBAAiB,CAAC,CAAA;AAC/C,wBAA+C,iBAAiB,CAAC,CAAA;AAEjE,sCAAoC,8BAA8B,CAAC,CAAA;AACnE,oCAAkC,4BAA4B,CAAC,CAAA;AAC/D,mCAAiC,2BAA2B,CAAC,CAAA;AAC7D,6BAA4B,qBAAqB,CAAC,CAAA;AAwBlD;IAUI,yBAAqC,YAA6B;QAC9D,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACf,MAAM,IAAI,KAAK,CACX,oEAAoE,CAAC,CAAC;QAC9E,CAAC;IACL,CAAC;IAZM,uBAAO,GAAd;QAEI,MAAM,CAAC;YACH,QAAQ,EAAE,eAAe;SAC5B,CAAC;IACN,CAAC;IA9BL;QAAC,eAAQ,CAAC;YACN,OAAO,EAAE,CAAC,gCAAa,EAAE,oBAAU,EAAE,4BAAkB,EAAE,qBAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACnF,YAAY,EAAE,EAEb;YACD,SAAS,EACT;gBACI,0BAAW;gBACX,qCAAgB;gBAChB,uCAAiB;gBACjB;oBACI,OAAO,EAAE,WAAI;oBACb,UAAU,EAAE,UAAC,UAAsB,EAAE,cAA8B,EAAE,gBAAkC;wBACnG,OAAA,IAAI,2CAAmB,CAAC,UAAU,EAAE,cAAc,EAAE,gBAAgB,CAAC;oBAArE,CAAqE;oBACzE,IAAI,EAAE,CAAC,iBAAU,EAAE,qBAAc,EAAE,qCAAgB,CAAC;iBACvD;aACJ;YACD,OAAO,EACP,EAEC;SACJ,CAAC;mBAWgB,eAAQ,EAAE;mBAAE,eAAQ,EAAE;;uBAXtC;IAmBF,sBAAC;AAAD,CAlBA,AAkBC,IAAA;AAlBY,uBAAe,kBAkB3B,CAAA","file":"app-shared.module.js","sourcesContent":["import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\r\nimport { Http, RequestOptions, XHRBackend } from '@angular/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MenuModule, AutoCompleteModule } from 'primeng/primeng';\r\n\r\nimport { HttpAuthInterceptor } from './auth/http-auth.interceptor';\r\nimport { AuthActivateGuard } from './auth/auth-activate.guard';\r\nimport { AuthEventService } from './auth/auth-event.service';\r\nimport { OidcService } from './auth/oidc.service';\r\n\r\n@NgModule({\r\n    imports: [BrowserModule, MenuModule, AutoCompleteModule, RouterModule.forChild([])],\r\n    declarations: [\r\n        \r\n    ],\r\n    providers:\r\n    [\r\n        OidcService,\r\n        AuthEventService,\r\n        AuthActivateGuard,\r\n        {\r\n            provide: Http,\r\n            useFactory: (xhrBackend: XHRBackend, requestOptions: RequestOptions, authEventService: AuthEventService) =>\r\n                new HttpAuthInterceptor(xhrBackend, requestOptions, authEventService),\r\n            deps: [XHRBackend, RequestOptions, AuthEventService]\r\n        }\r\n    ],\r\n    exports:\r\n    [\r\n        \r\n    ]\r\n})\r\nexport class AppSharedModule {\r\n\r\n\r\n    static forRoot(): ModuleWithProviders {\r\n\r\n        return {\r\n            ngModule: AppSharedModule\r\n        };\r\n    }\r\n\r\n    constructor( @Optional() @SkipSelf() parentModule: AppSharedModule) {\r\n        if (parentModule) {\r\n            throw new Error(\r\n                'AppSharedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n\r\n\r\n}\r\n"]}