{"version":3,"sources":["app/offeredservices/servicesformembers/services-for-members.component.ts"],"names":[],"mappings":"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","file":"services-for-members.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/primeng';\r\n\r\nimport { ServicesForMembersService } from './services-for-members.service';\r\nimport { OfferedServiceModel } from './offered-service.model';\r\nimport { PerformedServiceModel } from './performed-service.model';\r\n\r\n@Component({\r\n    selector: 'iacc-servicesformembers',\r\n    templateUrl: 'app/offeredservices/servicesformembers/services-for-members.html'\r\n})\r\nexport class ServicesForMembersComponent implements OnInit {\r\n    performServiceForm: FormGroup;\r\n    memberId: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    offeredFestivals: SelectItem[];\r\n    offeredServices: SelectItem[];\r\n    selectedService: OfferedServiceModel;\r\n    suggestedDonation: number;\r\n\r\n    constructor(private route: ActivatedRoute,\r\n        private router: Router,\r\n        private formBuilder: FormBuilder,\r\n        private serviceForMemberService: ServicesForMembersService) {\r\n        this.offeredFestivals = new Array<SelectItem>();\r\n        this.offeredServices = new Array<SelectItem>();\r\n        this.selectedService = new OfferedServiceModel();\r\n        this.suggestedDonation = 0;\r\n        this.offeredFestivals.push({ label: ' -- Choose --', value: null});\r\n        this.offeredServices.push({ label: '-- Choose -- ', value: null });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.serviceForMemberService.getOfferedFestivals()\r\n            .subscribe(festivals => {\r\n                festivals.forEach(f => this.offeredFestivals.push({ label: f.Name, value: f.Name }));\r\n                this.serviceForMemberService.getOfferedServices()\r\n                    .subscribe(services => {\r\n                        services.forEach(s => this.offeredServices.push({ label: s.Name, value: s }));\r\n                    });\r\n            });\r\n\r\n        this.route.params.subscribe(params => {\r\n            this.memberId = params['memberId'];\r\n            this.firstName = params['firstName'];\r\n            this.lastName = params['lastName'];\r\n\r\n            this.performServiceForm = this.formBuilder.group({\r\n                Id: [0],\r\n                ExpectedDateOfOffering: ['', <any>Validators.required],\r\n                MemberId: [this.memberId, <any>Validators.required],\r\n                AmountDonated: [0, <any>Validators.required],\r\n                SuggestedAmountForService: [0, <any>Validators.required],\r\n                PerformedForFirstName: [this.firstName, <any>Validators.required],\r\n                PerformedForLastName: [this.lastName, <any>Validators.required],\r\n                ServiceType: ['', <any>Validators.required],\r\n                ServiceName: ['', <any>Validators.required],\r\n                Festival: ['', <any>Validators.required],\r\n                Priest: ['']\r\n            });\r\n        });\r\n    }\r\n\r\n    onNewServiceSelected(event) {\r\n        let svcName = <FormControl>this.performServiceForm.controls['ServiceName'];\r\n        svcName.setValue(event.value.Name);\r\n        let svcType = <FormControl>this.performServiceForm.controls['ServiceType'];\r\n        svcType.setValue(event.value.TypeOfService);\r\n        let suggestedDollars = <FormControl>this.performServiceForm.controls['SuggestedAmountForService'];\r\n        suggestedDollars.setValue(event.value.SuggestedDonation);\r\n        let yourDonation = <FormControl>this.performServiceForm.controls['AmountDonated'];\r\n        this.suggestedDonation = event.value.SuggestedDonation;\r\n        yourDonation.setValue(event.value.SuggestedDonation);\r\n    }\r\n    save(model: PerformedServiceModel, isValid: boolean) {\r\n        this.serviceForMemberService.savePerformedService(model).subscribe(t => console.log(t));\r\n    }\r\n}\r\n"]}