{"version":3,"sources":["app/member/member.component.ts"],"names":[],"mappings":"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","file":"member.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\n\r\nimport { Member } from './member.model';\r\nimport { MemberService } from './member.service';\r\n\r\n@Component({\r\n    selector: 'iacc-member',\r\n    templateUrl: 'app/member/member.html'\r\n})\r\nexport class MemberComponent implements OnInit {\r\n    public memberForm: FormGroup;\r\n    public memberId: string;\r\n    memberNotFound: boolean;\r\n    mbr: Member;\r\n    constructor(private route: ActivatedRoute,\r\n        private router: Router, private formBuilder: FormBuilder,\r\n        private memberService: MemberService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.memberNotFound = true;\r\n        this.mbr = new Member();\r\n        this.route.params.subscribe(params => {\r\n            this.memberId = params['memberId'];\r\n            this.memberForm = this.formBuilder.group({\r\n                MemberId: [this.memberId, [<any>Validators.required, <any>Validators.minLength(10)]],\r\n                FirstName: ['', [<any>Validators.required]],\r\n                LastName: ['', [<any>Validators.required]],\r\n                AddressLine1: ['', [<any>Validators.required]],\r\n                AddressLine2: [''],\r\n                City: ['', [<any>Validators.required]],\r\n                State: ['', [<any>Validators.required]],\r\n                Zip: ['', [<any>Validators.required]],\r\n                FamilySize: ['', [<any>Validators.required]],\r\n                MemberNotFound: [true]\r\n            });\r\n            this.memberService.getMember(this.memberId).subscribe(data => {\r\n                    this.memberNotFound = data.MemberNotFound;\r\n\r\n                    this.mbr.AddressLine1 = data.AddressLine1;\r\n                    this.mbr.AddressLine2 = data.AddressLine2;\r\n                    this.mbr.City = data.City;\r\n                    this.mbr.FamilySize = data.FamilySize;\r\n                    this.mbr.FirstName = data.FirstName;\r\n                    this.mbr.LastName = data.LastName;\r\n                    this.mbr.MemberId = data.MemberId;\r\n                    this.mbr.State = data.State;\r\n                    this.mbr.Zip = data.Zip;\r\n                    this.mbr.MemberNotFound = data.MemberNotFound;\r\n\r\n                    let MemberId = <FormControl>this.memberForm.controls['MemberId'];\r\n                    let FirstName = <FormControl>this.memberForm.controls['FirstName'];\r\n                    let LastName = <FormControl>this.memberForm.controls['LastName'];\r\n                    let AddressLine1 = <FormControl>this.memberForm.controls['AddressLine1'];\r\n                    let AddressLine2 = <FormControl>this.memberForm.controls['AddressLine2'];\r\n                    let City = <FormControl>this.memberForm.controls['City'];\r\n                    let State = <FormControl>this.memberForm.controls['State'];\r\n                    let Zip = <FormControl>this.memberForm.controls['Zip'];\r\n                    let FamilySize = <FormControl>this.memberForm.controls['FamilySize'];\r\n                    let MemberNotFound = <FormControl>this.memberForm.controls['MemberNotFound'];\r\n\r\n                    MemberId.setValue(this.mbr.MemberId);\r\n\r\n                    AddressLine1.setValue(this.mbr.AddressLine1);\r\n                    AddressLine2.setValue(this.mbr.AddressLine2);\r\n                    City.setValue(this.mbr.City);\r\n                    FamilySize.setValue(this.mbr.FamilySize);\r\n                    FirstName.setValue(this.mbr.FirstName);\r\n                    LastName.setValue(this.mbr.LastName);\r\n                    MemberId.setValue(this.mbr.MemberId);\r\n                    State.setValue(this.mbr.State);\r\n                    Zip.setValue(this.mbr.Zip);\r\n                    MemberNotFound.setValue(this.mbr.MemberNotFound);\r\n\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    save(model: Member, isValid: boolean) {\r\n        if (model.MemberNotFound) {\r\n            this.memberService.addMember(model).subscribe(data => {\r\n                this.memberNotFound = data.MemberNotFound;\r\n\r\n                this.mbr.AddressLine1 = data.AddressLine1;\r\n                this.mbr.AddressLine2 = data.AddressLine2;\r\n                this.mbr.City = data.City;\r\n                this.mbr.FamilySize = data.FamilySize;\r\n                this.mbr.FirstName = data.FirstName;\r\n                this.mbr.LastName = data.LastName;\r\n                this.mbr.MemberId = data.MemberId;\r\n                this.mbr.State = data.State;\r\n                this.mbr.Zip = data.Zip;\r\n                this.mbr.MemberNotFound = data.MemberNotFound;\r\n            });\r\n        } else {\r\n            this.memberService.updateMember(model).subscribe(data => {\r\n                this.memberNotFound = data.MemberNotFound;\r\n\r\n                this.mbr.AddressLine1 = data.AddressLine1;\r\n                this.mbr.AddressLine2 = data.AddressLine2;\r\n                this.mbr.City = data.City;\r\n                this.mbr.FamilySize = data.FamilySize;\r\n                this.mbr.FirstName = data.FirstName;\r\n                this.mbr.LastName = data.LastName;\r\n                this.mbr.MemberId = data.MemberId;\r\n                this.mbr.State = data.State;\r\n                this.mbr.Zip = data.Zip;\r\n                this.mbr.MemberNotFound = data.MemberNotFound;\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n"]}