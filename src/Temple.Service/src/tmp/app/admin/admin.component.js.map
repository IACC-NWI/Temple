{"version":3,"sources":["app/admin/admin.component.ts"],"names":[],"mappings":"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","file":"admin.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { SelectItem } from 'primeng/primeng';\r\n\r\nimport { AdminService } from './admin.service';\r\nimport { FestivalModel } from './festival.model';\r\nimport { ServiceModel } from './service.model';\r\n\r\n@Component({\r\n    selector: 'iacc-admin',\r\n    templateUrl: 'app/admin/admin.html'\r\n})\r\nexport class AdminComponent implements OnInit {\r\n    festivalForm: FormGroup;\r\n    serviceForm: FormGroup;\r\n    availableFestivals: SelectItem[];\r\n    availableServices: SelectItem[];\r\n    selectedFestival: string;\r\n    selectedServices: number;\r\n    constructor(private formBuilder: FormBuilder,\r\n        private adminService: AdminService) {\r\n        this.selectedFestival = '';\r\n        this.selectedServices = 0;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.festivalForm = this.formBuilder.group({\r\n            Id: [0],\r\n            Name: ['', [<any>Validators.required]]\r\n        });\r\n        this.serviceForm = this.formBuilder.group({\r\n            Id: [0],\r\n            Name: ['', [<any>Validators.required]],\r\n            TypeOfService: ['', [<any>Validators.required]],\r\n            SuggestedDonation: ['', [<any>Validators.required]],\r\n            Description: ['', [<any>Validators.required]]\r\n        });\r\n        this.getFestivals();\r\n        this.getServices();\r\n    }\r\n\r\n    saveFestival(model: FestivalModel, isValid: boolean) {\r\n        if (isValid) {\r\n            this.adminService.saveFestival(model).subscribe(t => this.availableFestivals.push({label: t.Name, value: t.Name}));\r\n        }\r\n    }\r\n    getFestivals() {\r\n        this.availableFestivals = new Array<SelectItem>();\r\n        this.adminService.getFestivals()\r\n            .subscribe(t => {\r\n                t.forEach(m => { this.availableFestivals.push({ label: m.Name, value: m.Name }); });\r\n            });\r\n    }\r\n    saveService(model: ServiceModel, isValid: boolean) {\r\n        if (isValid) {\r\n            this.adminService.saveService(model)\r\n                .subscribe(t => this.availableServices.push({ label: t.Name, value: t.Id }));\r\n        }\r\n    }\r\n    getServices() {\r\n        this.availableServices = new Array<SelectItem>();\r\n        this.adminService.getServices()\r\n            .subscribe(t => {\r\n                t.forEach(m => { this.availableServices.push({ label: m.Name, value: m.Id }) });\r\n            });\r\n    }\r\n}\r\n"]}