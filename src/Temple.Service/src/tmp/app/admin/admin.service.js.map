{"version":3,"sources":["app/admin/admin.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA+B,eAAe,CAAC,CAAA;AAC/C,mBAA2B,SAAS,CAAC,CAAA;AAErC,+BAA+B;AAC/B,QAAO,uBAAuB,CAAC,CAAA;AAC/B,QAAO,yBAAyB,CAAC,CAAA;AAKjC;IAGI,sBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFtB,kBAAa,GAAG,yBAAyB,CAAC;IAEhB,CAAC;IAEnC,mCAAY,GAAZ,UAAa,KAAoB;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,2BAA2B,EAAE,KAAK,CAAC;aACzE,GAAG,CAAC,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAClC,KAAK,CAAC,UAAC,KAAU,IAAK,OAAA,eAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,EAAtD,CAAsD,CAAC,CAAC;IACvF,CAAC;IACD,mCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,yBAAyB,CAAC;aAC/D,GAAG,CAAC,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAClC,KAAK,CAAC,UAAC,KAAU,IAAK,OAAA,eAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,EAAtD,CAAsD,CAAC,CAAC;IACvF,CAAC;IACD,kCAAW,GAAX,UAAY,KAAmB;QAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,0BAA0B,EAAE,KAAK,CAAC;aACxE,GAAG,CAAC,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAClC,KAAK,CAAC,UAAC,KAAU,IAAK,OAAA,eAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,EAAtD,CAAsD,CAAC,CAAC;IACvF,CAAC;IACD,kCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,wBAAwB,CAAC;aAC9D,GAAG,CAAC,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAClC,KAAK,CAAC,UAAC,KAAU,IAAK,OAAA,eAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,EAAtD,CAAsD,CAAC,CAAC;IACvF,CAAC;IACD,uCAAgB,GAAhB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,4BAA4B,CAAC;aAClE,GAAG,CAAC,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aAClC,KAAK,CAAC,UAAC,KAAU,IAAK,OAAA,eAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,EAAtD,CAAsD,CAAC,CAAC;IACvF,CAAC;IA9BL;QAAC,iBAAU,EAAE;;oBAAA;IAiCb,mBAAC;AAAD,CAhCA,AAgCC,IAAA;AAhCY,oBAAY,eAgCxB,CAAA","file":"admin.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n// Import RxJs required methods\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\nimport { FestivalModel } from './festival.model'\r\nimport { ServiceModel } from './service.model';\r\n@Injectable()\r\nexport class AdminService {\r\n    private templeService = \"http://localhost:30010/\";\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    saveFestival(model: FestivalModel) {\r\n        return this.http.post(this.templeService + 'api/temple/addnewfestival', model)\r\n            .map((res: Response) => res.json())\r\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\r\n    }\r\n    getFestivals() {\r\n        return this.http.get(this.templeService + 'api/temple/getFestivals')\r\n            .map((res: Response) => res.json())\r\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\r\n    }\r\n    saveService(model: ServiceModel) {\r\n        return this.http.post(this.templeService + 'api/temple/addNewService', model)\r\n            .map((res: Response) => res.json())\r\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\r\n    }\r\n    getServices() {\r\n        return this.http.get(this.templeService + 'api/temple/getServices')\r\n            .map((res: Response) => res.json())\r\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\r\n    }\r\n    getServicesTypes() {\r\n        return this.http.get(this.templeService + 'api/temple/getServiceTypes')\r\n            .map((res: Response) => res.json())\r\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\r\n    }\r\n\r\n\r\n}"]}